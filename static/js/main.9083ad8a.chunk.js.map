{"version":3,"sources":["models/auth.ts","stores/user.ts","stores/auth.ts","stores/image.ts","stores/index.ts","assets/burt.png","components/Header.tsx","components/Footer.tsx","components/Layout.tsx","components/Uploader.tsx","components/Tips.tsx","pages/Home.tsx","pages/History.tsx","pages/About.tsx","components/LoginOrRegister.tsx","pages/Login.tsx","pages/Register.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AV","init","appId","appKey","serverURL","Auth","username","password","user","User","setUsername","setPassword","Promise","resolve","reject","signUp","then","loginUser","catch","error","logIn","logOut","current","Uploader","file","filename","item","Object","avFile","File","set","save","serverFile","page","limit","query","Query","include","skip","descending","equalTo","find","results","currentUser","makeObservable","this","observable","setCurrentUser","action","resetCurrentUser","values","login","register","logout","UserStore","isUploading","setFile","setFilename","upload","newFilename","newFile","finally","context","createContext","AuthStore","ImageStore","useStores","useContext","Wrapper","styled","header","Operate","div","Header","observer","history","useHistory","src","logoUrl","alt","to","activeClassName","exact","attributes","size","onClick","push","StyledFooter","footer","Footer","Layout","props","children","Dragger","Upload","Result","Name","dd","inputWidth","useRef","inputHeight","useState","width","setWidth","height","setHeight","showUploadList","beforeUpload","test","type","message","warning","name","success","console","log","spinning","tip","className","InboxOutlined","href","url","target","rel","style","wordBreak","ref","onChange","value","placeholder","Tips","Home","Img","img","History","loading","setLoading","listData","setListData","hasData","setHasData","setPage","fetchData","localStorage","getItem","data","length","useEffect","loadMore","textAlign","marginTop","lineHeight","itemLayout","dataSource","renderItem","Item","id","About","FormWrapper","layout","labelCol","span","wrapperCol","tailLayout","offset","LoginOrRegister","isLogin","Form","useForm","form","setInfo","labelAlign","onFinish","rawMessage","onFinishFailed","errorInfo","label","rules","required","validator","rule","Error","Password","getFieldValue","htmlType","Login","Register","App","React","JSON","parse","window","addEventListener","e","setItem","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9083ad8a.chunk.js","sourcesContent":["import AV, { User } from 'leancloud-storage';\n\nAV.init({\n  appId: 'yA44ngzWUm5AGxTcizJxRMcG-gzGzoHsz',\n  appKey: 'miDj0W9Kl7YtXMyWTTDhGqGx',\n  serverURL: 'https://ya44ngzw.lc-cn-n1-shared.com'\n});\n\nconst Auth = {\n  register (username: string, password: string) {\n    const user = new User();\n    user.setUsername(username);\n    user.setPassword(password);\n    return new Promise((resolve, reject) => {\n      user.signUp().then((loginUser) => {\n        resolve(loginUser);\n      }).catch((error) => {\n        reject(error);\n      });\n    });\n  },\n  login (username: string, password: string) {\n    return new Promise((resolve, reject) => {\n      User.logIn(username, password).then((loginUser) => {\n        resolve(loginUser);\n      }).catch((error) => {\n        reject(error);\n      });\n    });\n  },\n  logout () {\n    User.logOut();\n  },\n  getCurrentUser () {\n    return User.current();\n  }\n};\n\nconst Uploader = {\n  add (file: File | null, filename: string) {\n    const item = new AV.Object('Image');\n    const avFile = new AV.File(filename, file);\n    item.set('filename', filename);\n    item.set('owner', User.current());\n    item.set('url', avFile);\n    return new Promise((resolve, reject) => {\n      item.save().then((serverFile) => {\n        resolve(serverFile);\n      }).catch((error) => {\n        reject(error);\n      });\n    });\n  },\n  find ({ page = 0, limit = 10 }) {\n    const query = new AV.Query('Image');\n    query.include('owner');\n    query.include('createAt');\n    query.limit(limit);\n    query.skip(page * limit);\n    query.descending('createdAt');\n    query.equalTo('owner', User.current());\n    return new Promise((resolve, reject) => {\n      query.find().then(results => {\n        resolve(results)\n      }).catch((error) => {\n        reject(error)\n      })\n    })\n  }\n};\n\nexport { Auth, Uploader };\n","import { observable, action, makeObservable } from 'mobx';\nimport { Auth } from '@/models/auth';\nimport { User } from 'leancloud-storage';\n\nclass UserStore {\n  currentUser: null | User = null;\n  constructor () {\n    makeObservable(this, {\n      currentUser: observable,\n      setCurrentUser: action,\n      resetCurrentUser: action\n    })\n  }\n\n  setCurrentUser () {\n    this.currentUser = Auth.getCurrentUser()\n  }\n\n  resetCurrentUser () {\n    this.currentUser = null\n  }\n}\n\nexport default new UserStore();\n","import { action, makeObservable, observable } from 'mobx';\nimport UserStore from '@/stores/user';\nimport { Auth } from '@/models/auth';\n\nclass AuthStore {\n  values = {\n    username: '',\n    password: ''\n  };\n\n  constructor () {\n    makeObservable(this, {\n      values: observable,\n      setUsername: action,\n      setPassword: action,\n      login: action,\n      register: action,\n      logout: action\n    });\n  }\n\n  setUsername (username: string) {\n    this.values.username = username;\n  }\n\n  setPassword (password: string) {\n    this.values.password = password;\n  }\n\n  login () {\n    return new Promise((resolve, reject) => {\n      Auth.login(this.values.username, this.values.password).then(user => {\n        UserStore.setCurrentUser();\n        resolve(user);\n      }).catch((error) => {\n        UserStore.resetCurrentUser();\n        reject(error);\n      });\n    });\n  }\n\n  register () {\n    return new Promise((resolve, reject) => {\n      Auth.register(this.values.username, this.values.password).then(user => {\n        UserStore.setCurrentUser();\n        resolve(user);\n      }).catch((error) => {\n        UserStore.resetCurrentUser();\n        reject(error);\n      });\n    });\n  }\n\n  logout () {\n    Auth.logout();\n    UserStore.resetCurrentUser();\n  }\n}\n\nexport default new AuthStore();\n","import { observable, action, makeObservable } from 'mobx';\nimport { Uploader } from '@/models/auth';\nimport { Object } from 'leancloud-storage';\n\nclass ImageStore {\n  filename = '';\n  file: File | null = null;\n  isUploading = false;\n  serverFile: Object | null = null;\n  constructor () {\n    makeObservable(this, {\n      filename: observable,\n      file: observable,\n      isUploading: observable,\n      serverFile: observable,\n      setFile: action,\n      setFilename: action,\n      upload: action\n    })\n  }\n\n  setFilename (newFilename: string) {\n    this.filename = newFilename\n  }\n\n  setFile (newFile: File) {\n    this.file = newFile\n  }\n\n  upload () {\n    this.isUploading = true\n    this.serverFile = null\n    return new Promise((resolve, reject) => {\n      Uploader.add(this.file, this.filename).then((serverFile) => {\n        // @ts-ignore\n        this.serverFile = serverFile\n        resolve(serverFile)\n      }).catch((error) => {\n        reject(error)\n      }).finally(() => {\n        this.isUploading = false\n      })\n    })\n  }\n}\n\nexport default new ImageStore();\n","import { createContext, useContext } from 'react';\nimport AuthStore from '@/stores/auth';\nimport UserStore from '@/stores/user';\nimport ImageStore from '@/stores/image';\n\nconst context = createContext({\n  AuthStore,\n  UserStore,\n  ImageStore\n});\n\nexport const useStores = () => useContext(context);\n","export default __webpack_public_path__ + \"static/media/burt.37709180.png\";","import React from 'react';\nimport { HashRouter as Router, NavLink, useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport logoUrl from '@/assets/burt.png'\nimport { Button } from 'antd';\nimport { useStores } from '@/stores';\nimport { observer } from 'mobx-react';\n\nconst Wrapper = styled.header`\n  display: flex;\n  align-items: center;\n  padding: 10px 100px;\n  background-color: #407fbf;\n  color: #fff;\n  @media (max-width: 768px) {\n    padding: 10px 10px;\n    > img {display: none;}\n  }\n  > img {height: 30px;}\n  > nav {\n    > a {\n      color: #fff;\n      margin-left: 30px;\n      &.active{border-bottom: solid 1px #fff;}\n    }\n  }\n`\n\nconst Operate = styled.div`\n  margin-left: auto;\n  > button:first-child{margin-right: 20px;}\n  > span {\n    margin-right: 20px;\n    color: #cccccc;\n  }\n`\n\nconst Header = observer(() => {\n  const { UserStore, AuthStore } = useStores()\n  const history = useHistory();\n  const logout = () => {\n    AuthStore.logout()\n    history.push('/login')\n  }\n  return (\n    <Wrapper>\n      <img src={logoUrl} alt=\"\"/>\n        <Router>\n          <nav>\n            <NavLink to=\"/\" activeClassName=\"active\" exact>首页</NavLink>\n            <NavLink to=\"/history\" activeClassName=\"active\">上传记录</NavLink>\n            <NavLink to=\"/about\" activeClassName=\"active\">关于</NavLink>\n          </nav>\n          <Operate>\n            {UserStore.currentUser\n              ? <>\n                <span>hello, {UserStore.currentUser.attributes.username}</span>\n                <Button size=\"small\" onClick={logout}>注销</Button>\n              </>\n              : <>\n                <Button size=\"small\"><NavLink to=\"/login\">登录</NavLink></Button>\n                <Button size=\"small\"><NavLink to=\"/register\">注册</NavLink></Button>\n              </>\n            }\n          </Operate>\n        </Router>\n    </Wrapper>\n  );\n})\n\nexport default Header;\n","import React from 'react';\nimport styled from 'styled-components';\nconst StyledFooter = styled.footer`\n  padding: 10px 100px;\n  text-align: center;\n  font-size: 12px;\n  color: #aaa;\n`\nfunction Footer () {\n  return (\n    <StyledFooter>\n      © 2022 Burt. All rights reserved.\n    </StyledFooter>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport Header from '@/components/Header';\nimport Footer from '@/components/Footer';\n\nconst Layout = (props: any) => {\n  return (\n    <>\n      <Header/>\n      <main>{props.children}</main>\n      <Footer/>\n    </>\n  )\n};\n\nexport default Layout\n","import React, { MutableRefObject, useRef, useState } from 'react';\nimport { Upload, message, Spin } from 'antd';\nimport { InboxOutlined } from '@ant-design/icons';\nimport { useStores } from '@/stores';\nimport styled from 'styled-components';\nimport { observer } from 'mobx-react';\n\nconst { Dragger } = Upload;\n\nconst Result = styled.div`\n  border: 1px #ccc dashed;\n  margin-top: 30px;\n  padding: 20px;\n\n  img {\n    max-width: 300px;\n  }\n`;\nconst Name = styled.dd`\n  color: deepskyblue;\n`;\nconst Uploader = observer(() => {\n  const { ImageStore, UserStore } = useStores();\n  const inputWidth: MutableRefObject<HTMLInputElement> = useRef() as MutableRefObject<HTMLInputElement>;\n  const inputHeight: MutableRefObject<HTMLInputElement> = useRef() as MutableRefObject<HTMLInputElement>;\n  const [width, setWidth] = useState('300');\n  const [height, setHeight] = useState('300');\n  const widthChange = () => {\n    setWidth(inputWidth.current.value || '300');\n  };\n  const heightChange = () => {\n    setHeight(inputHeight.current.value || '300');\n  };\n  const props = {\n    showUploadList: false,\n    beforeUpload: (file: File) => {\n      if (!UserStore.currentUser) {\n        message.warning('请先登录再上传');\n        return false;\n      }\n      if (!/(svg$)|(png$)|(jpg$)|(jpeg$)|(gif$)/ig.test(file.type)) {\n        message.warning('上传的图片格式不正确');\n        return false;\n      }\n      if (file.size > 1024 * 1024) {\n        message.warning('图片尺寸最大为 1M');\n        return false;\n      }\n      ImageStore.setFile(file);\n      ImageStore.setFilename(file.name);\n      ImageStore.upload().then(serverFile => {\n        message.success('上传成功');\n        console.log(serverFile);\n      }).catch(() => {\n        message.error('上传失败，请稍后再试');\n      });\n      return false;\n    }\n  };\n  return (\n    <>\n      <Spin spinning={ImageStore.isUploading} tip=\"上传中...\">\n        <Dragger {...props}>\n          <p className=\"ant-upload-drag-icon\">\n            <InboxOutlined/>\n          </p>\n          <p className=\"ant-upload-text\">点击或拖拽上传图片</p>\n          <p className=\"ant-upload-hint\">\n            仅支持.png/.gif/.svg/.jpg格式的图片，图片最大尺寸为 1M\n          </p>\n        </Dragger>\n      </Spin>\n      {ImageStore.serverFile && UserStore.currentUser\n        ? <Result>\n          <h1>上传结果</h1>\n          <dl>\n            <dt>线上地址</dt>\n            <dd>\n              <a href={ImageStore.serverFile.attributes.url.attributes.url} target=\"_blank\" rel=\"noreferrer\" style={{ wordBreak: 'break-word' }}>\n                {ImageStore.serverFile.attributes.url.attributes.url}\n              </a>\n            </dd>\n            <dt>文件名</dt>\n            <Name>{ImageStore.filename}</Name>\n            <dt>图片预览</dt>\n            <dd>\n              <img src={ImageStore.serverFile.attributes.url.attributes.url} alt=\"\"/>\n            </dd>\n            <dt>更多尺寸</dt>\n            <dd>\n              <input ref={inputWidth} onChange={widthChange} placeholder=\"最大宽度（可选）\"/>\n              <input ref={inputHeight} onChange={heightChange} placeholder=\"最大高度（可选）\"/>\n            </dd>\n            <dd>\n              <a href={`${ImageStore.serverFile.attributes.url.attributes.url}?imageView2/0/w/${width}/h/${height}`}\n                 target=\"_blank\" rel=\"noreferrer\" style={{ wordBreak: 'break-word' }}>\n                {`${ImageStore.serverFile.attributes.url.attributes.url}?imageView2/0/w/${width}/h/${height}`}\n              </a>\n            </dd>\n          </dl>\n        </Result>\n        : null\n      }\n    </>\n  );\n});\n\nexport default Uploader;\n","import React from 'react';\nimport { useStores } from '@/stores';\nimport { observer } from 'mobx-react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  background: orange;\n  padding: 10px;\n  margin: 0 0 30px;\n  color: #fff;\n  border-radius: 4px;\n  text-align: center;\n`\n\nconst Tips:React.FC = observer((props) => {\n  const { UserStore } = useStores()\n  return (\n    <>\n      {UserStore.currentUser ? null : <Wrapper>{props.children}</Wrapper>}\n    </>\n  )\n})\n\nexport default Tips\n","import React from 'react';\nimport Layout from '@/components/Layout';\nimport Uploader from '@/components/Uploader';\nimport Tips from '@/components/Tips';\n\nfunction Home () {\n  return (\n    <Layout>\n      <Tips>请先登录再上传！</Tips>\n      <Uploader/>\n    </Layout>\n  );\n}\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport Layout from '@/components/Layout';\nimport { Uploader } from '@/models/auth';\nimport { Button, List } from 'antd';\nimport { Object } from 'leancloud-storage';\nimport styled from 'styled-components';\nimport { useStores } from '@/stores';\nimport { observer } from 'mobx-react';\n\nconst Img = styled.img`\n  width: 120px;\n  height: 80px;\n  object-fit: contain;\n  border: solid 1px #ccc;\n`;\n\nconst History = observer(() => {\n  const { UserStore } = useStores();\n  const [loading, setLoading] = useState(false);\n  const [listData, setListData] = useState<Object[]>([]);\n  const [hasData, setHasData] = useState(true);\n  const [page, setPage] = useState(0);\n  const fetchData = (page: number) => {\n    // if (!UserStore.currentUser ) { return; }\n    if (localStorage.getItem('isLogin') === 'false' && !UserStore.currentUser) { return; }\n    setLoading(true);\n    Uploader.find({ page: page, limit: 10 }).then((data: any) => {\n      console.log(data);\n      if (data.length === 0) { setHasData(false); }\n      setListData([...listData, ...data]);\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n  useEffect(() => {\n    setListData([]);\n    fetchData(page);\n  }, []);\n  const onLoadMore = () => {\n    fetchData(page + 1);\n    setPage(page + 1);\n  };\n  const loadMore = hasData && UserStore.currentUser\n    ? <div\n      style={{\n        textAlign: 'center',\n        marginTop: 12,\n        height: 32,\n        lineHeight: '32px'\n      }}\n    >\n      <Button onClick={onLoadMore}>loading more</Button>\n    </div>\n    : null;\n  return (\n    <Layout>\n      <div>\n        <div>\n          <List\n            loading={loading}\n            itemLayout=\"horizontal\"\n            loadMore={loadMore}\n            dataSource={listData}\n            renderItem={item => (\n              <List.Item key={item.id}>\n                <div>\n                  <Img src={item.attributes.url.attributes.url} alt=\"\"/>\n                </div>\n                <div>{item.attributes.filename}</div>\n                <div>\n                  <a href={item.attributes.url.attributes.url} target=\"_blank\" rel=\"noreferrer\" style={{ wordBreak: 'break-word' }}>\n                    {item.attributes.url.attributes.url}\n                  </a>\n                </div>\n              </List.Item>\n            )}\n          />\n        </div>\n      </div>\n    </Layout>\n  );\n})\n\nexport default History;\n","import React from 'react';\nimport Layout from '@/components/Layout';\n\nfunction About () {\n  return (\n    <Layout>\n      <div>\n        这是一个基于 React + Typescript 的图床应用。\n      </div>\n    </Layout>\n  );\n}\n\nexport default About;\n","import React from 'react';\nimport { observer } from 'mobx-react';\nimport { Form, Input, Button, message } from 'antd';\nimport styled from 'styled-components';\nimport { useStores } from '@/stores';\nimport { useHistory } from 'react-router-dom';\n\nconst FormWrapper = styled.div`\n  padding: 20px;\n  margin: 50px 500px 0;\n  min-width: 500px;\n  border: solid 1px #ccc;\n\n  @media (max-width: 768px) {\n    margin: 50px auto 0;\n    min-width: 200px;\n  }\n\n  &:hover{\n    box-shadow: 0 5px 19px 6px rgba(0,0,0,0.05);\n    border: none;\n  }\n  >span{\n    display: block;\n    text-align: center;\n    font-size: 1.5em;\n    padding-bottom: 0.5em;\n    font-weight: 500;\n  }\n`\n\nconst layout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 20 }\n};\nconst tailLayout = {\n  wrapperCol: { offset: 4, span: 20 }\n}\nconst labelAlign = 'left'\n\ntype Props = {\n  isLogin: boolean,\n};\ninterface UserInfo {\n  username: string,\n  password: string\n}\nconst LoginOrRegister: React.FC<Props> = observer((props) => {\n  const { isLogin } = props;\n  const [form] = Form.useForm();\n  const { AuthStore } = useStores();\n  const history = useHistory();\n  const setInfo = (values: UserInfo) => {\n    AuthStore.setUsername(values.username);\n    AuthStore.setPassword(values.password);\n  }\n  const login = (values: UserInfo) => {\n    setInfo(values)\n    AuthStore.login().then(() => {\n      message.success('登录成功')\n      history.push('/')\n    }).catch((error) => {\n      message.error(error.rawMessage)\n    })\n  };\n  const register = (values: UserInfo) => {\n    setInfo(values)\n    AuthStore.register().then(() => {\n      message.success('注册成功，并成功登录')\n      history.push('/')\n    }).catch((error) => {\n      message.error(error.rawMessage)\n    })\n  };\n  const onFinish = (values: UserInfo) => {\n    console.log('Success:', values);\n    if (isLogin) {\n      login(values)\n    } else {\n      register(values)\n    }\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log('Failed:', errorInfo);\n  };\n  const validateUsername = (rule:object, value: string) => {\n    if (/\\W/.test(value)) { return Promise.reject(new Error('只能包含字母数字下划线')) }\n    if (value.length < 4 || value.length > 10) { return Promise.reject(new Error('长度为4~10个字符')) }\n    return Promise.resolve();\n  };\n  const validateConfirm = (rule: object, value: string) => {\n    if (form.getFieldValue('password') === value) { return Promise.resolve() }\n    return Promise.reject(new Error('两次密码不一致'));\n  };\n  return (\n    <FormWrapper>\n      <span>{isLogin ? '图床系统登录' : '欢迎注册图床系统'}</span>\n      <Form\n        form={form}\n        {...layout}\n        labelAlign={labelAlign}\n        name=\"basic\"\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n      >\n        <Form.Item\n          label=\"用户名\"\n          name=\"username\"\n          rules={[{ required: true, message: '请输入用户名' }, { validator: validateUsername }]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"密码\"\n          name=\"password\"\n          rules={[{ required: true, message: '请输入密码' }]}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        {!isLogin &&\n          <Form.Item\n            label=\"确认密码\"\n            name=\"confirmPassword\"\n            rules={[{ required: true, message: '请输入确认密码' }, { validator: validateConfirm }]}\n          >\n            <Input.Password />\n          </Form.Item>\n        }\n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            {isLogin ? '登录' : '注册'}\n          </Button>\n        </Form.Item>\n      </Form>\n    </FormWrapper>\n  )\n})\n\nexport default LoginOrRegister\n","import React from 'react';\nimport { observer } from 'mobx-react';\nimport LoginOrRegister from '@/components/LoginOrRegister';\nimport Layout from '@/components/Layout';\n\nconst Login = observer(() => {\n  return (\n    <Layout>\n      <LoginOrRegister isLogin={true} />\n    </Layout>\n  )\n})\n\nexport default Login\n","import React from 'react';\nimport { observer } from 'mobx-react';\nimport LoginOrRegister from '@/components/LoginOrRegister';\nimport Layout from '@/components/Layout';\n\nconst Register = observer(() => {\n  return (\n    <Layout>\n      <LoginOrRegister isLogin={false}/>\n    </Layout>\n  )\n})\n\nexport default Register\n","import React from 'react';\nimport '@/App.css';\nimport 'antd/dist/antd.css';\nimport { Switch, Route, HashRouter as Router } from 'react-router-dom';\nimport { useStores } from '@/stores';\n\nimport Home from '@/pages/Home';\nimport History from '@/pages/History';\nimport About from '@/pages/About';\nimport Login from '@/pages/Login';\nimport Register from '@/pages/Register';\n\nfunction App () {\n  const { UserStore } = useStores();\n  React.useEffect(() => {\n    const isLogin = JSON.parse(localStorage.getItem('isLogin') || 'false');\n    isLogin ? UserStore.setCurrentUser() : UserStore.resetCurrentUser()\n    UserStore.setCurrentUser();\n    window.addEventListener('beforeunload', (e) => {\n      if (UserStore.currentUser) {\n        localStorage.setItem('isLogin', 'true');\n      } else {\n        localStorage.setItem('isLogin', 'false');\n      }\n    })\n  }, [])\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route path=\"/\" component={Home} exact/>\n          <Route path=\"/history\" component={History} exact/>\n          <Route path=\"/about\" component={About} exact/>\n          <Route path=\"/login\" component={Login} exact/>\n          <Route path=\"/register\" component={Register} exact/>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}